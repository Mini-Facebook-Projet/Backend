const express = require('express')

//to check object id
const objectId = require('mongoose').Types.ObjectId

const router = express.Router()

const comment = require('../models/CommentModel')

// get All comments
router.get('/', (req, res) => {
    comment.find()
        .then(data => res.status(201).json(data))
        .catch(err => console.log(err))
})

// // get all comments by post
// router.get('/postId/:id',(req,res)=>{
//     if(objectId.isValid(req.params.id) == false){
//         res.status(400).json({
//             error: " id is not valid"
//         })
//     }else{
//         comment.find({ post: req.params.id })
//         .then(data => {
//             if (data.length > 0) {
//                 res.json(data);
//             } else {
//                 res.status(404).json({
//                     error: null
//                 });
//             }
//         })
//         .catch(err => console.log(err));
//     }   

// })
// Route pour obtenir les commentaires par poste
// router.get('/postId/:id', (req, res) => {
//     if (!objectId.isValid(req.params.id)) {
//         return res.status(400).json({
//             error: "ID is not valid"
//         });
//     }
//     // const limit = parseInt(req.query.limit, 10); 
//     if ((!parseInt(req.query.limit, 10).isNaN(limit)) && parseInt(req.query.limit, 10)>0) {
//         const limit = parseInt(req.query.limit, 10)
//         comment.find({ post: req.params.id }).limit(limit)
//         .then(data => {
//             if (data.length > 0) {
//                 res.json(data);
//             } else {
//                 // Aucun commentaire trouvé, renvoyer un tableau vide
//                 res.json([]);
//             }
//         })
//         .catch(err => {
//             console.log(err);
//             res.status(500).json({
//                 error: "Internal server error"
//             });
//         });
//     }else{
//     comment.find({ post: req.params.id })
//         .then(data => {
//             if (data.length > 0) {
//                 res.json(data);
//             } else {
//                 // Aucun commentaire trouvé, renvoyer un tableau vide
//                 res.json([]);
//             }
//         })
//         .catch(err => {
//             console.log(err);
//             res.status(500).json({
//                 error: "Internal server error"
//             });
//         });
//     }
// });

router.get('/postId/:id', (req, res) => {
    if (!objectId.isValid(req.params.id)) {
        return res.status(400).json({
            error: "ID is not valid"
        });
    }

    const limit = parseInt(req.query.limit, 10);

    if (!isNaN(limit) && limit > 0) {
        // Si le paramètre limit est défini et valide, limitez le nombre de commentaires
        comment.find({ post: req.params.id }).limit(limit)
            .then(data => {
                if (data.length > 0) {
                    res.json(data);
                } else {
                    // Aucun commentaire trouvé, renvoyer un tableau vide
                    res.json([]);
                }
            })
            .catch(err => {
                console.log(err);
                res.status(500).json({
                    error: "Internal server error"
                });
            });
    } else {
        // Si le paramètre limit n'est pas défini ou n'est pas valide, listez tous les commentaires
        comment.find({ post: req.params.id })
            .then(data => {
                if (data.length > 0) {
                    res.json(data);
                } else {
                    // Aucun commentaire trouvé, renvoyer un tableau vide
                    res.json([]);
                }
            })
            .catch(err => {
                console.log(err);
                res.status(500).json({
                    error: "Internal server error"
                });
            });
    }
});


// Route pour obtenir les commentaires par poste avec une limite de commentaires
// router.get('/postId/:id/limit/:limit', (req, res) => {
//     if (!objectId.isValid(req.params.id)) {
//         return res.status(400).json({
//             error: "ID is not valid"
//         });
//     }

//     comment.find({ post: req.params.id }).limit(3)
//         .then(data => {
//             if (data.length > 0) {
//                 res.json(data);
//             } else {
//                 // Aucun commentaire trouvé, renvoyer un tableau vide
//                 res.json([]);
//             }
//         })
//         .catch(err => {
//             console.log(err);
//             res.status(500).json({
//                 error: "Internal server error"
//             });
//         });
// });


// Create comments
router.post('/create', (req, res) => {
    comment.create(req.body)
        .then(data => res.send(data))
        .catch(err => console.log(err))
})

// // update comment by id
// router.put('/comment/:id',(req,res)=>{
//     if(objectId.isValid(req.params.id) == false){
//         res.status(400).json({
//             error: " id is not valid"
//         })
//     }else{
//         comment.findByIdAndUpdate(req.params.id, req.body,{new:true})
//             .then(data => {
//                 if(data){
//                     res.send(data)
//                 }else{
//                     res.status(404).json({
//                         error: " id not found"
//                     })
//                 }
//             })
//             .catch(err => console.log(err))
//     }
// })

// // delete comment by id
// router.delete('/comment/:id',(req,res)=>{
//     if(objectId.isValid(req.params.id) == false){
//         res.status(400).json({
//             error: " id is not valid"
//         })
//     }else{
//         comment.findByIdAndDelete(req.params.id)
//             .then(data => {
//                 if(data){
//                     res.send(data)
//                 }else{
//                     res.status(404).json({
//                         error: " id not found"
//                     })
//                 }
//             })
//             .catch(err => console.log(err))
//     }
// })


module.exports = router